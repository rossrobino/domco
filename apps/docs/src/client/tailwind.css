@layer theme, base, components, utilities;

@import "tailwindcss/theme.css" layer(theme);
@import "uico" layer(base);
@import "tailwindcss/utilities.css" layer(utilities);

@source "../";

@theme {
	--color-background: var(--background);
	--color-foreground: var(--foreground);
	--color-heading-foreground: var(--heading-foreground);
	--color-base-50: var(--base-50);
	--color-base-100: var(--base-100);
	--color-base-200: var(--base-200);
	--color-base-300: var(--base-300);
	--color-base-400: var(--base-400);
	--color-base-500: var(--base-500);
	--color-base-600: var(--base-600);
	--color-base-700: var(--base-700);
	--color-base-800: var(--base-800);
	--color-base-900: var(--base-900);
	--color-base-950: var(--base-950);
	--color-muted-background: var(--muted-background);
	--color-muted-foreground: var(--muted-foreground);
	--color-primary-background: var(--primary-background);
	--color-primary-foreground: var(--primary-foreground);
	--color-secondary-background: var(--secondary-background);
	--color-secondary-foreground: var(--secondary-foreground);
	--color-accent-background: var(--accent-background);
	--color-accent-foreground: var(--accent-foreground);
	--color-secondary-background: var(--secondary-background);
	--color-destructive-foreground: var(--secondary-foreground);
}

@layer base {
	:root {
		--base: var(--color-slate-600);
		--accent: var(--color-teal-700);
		--destructive: var(--color-rose-700);

		pre {
			--shiki-foreground: var(--color-base-200);
			--shiki-background: var(--color-base-900);
			--shiki-token-constant: var(--color-base-50);
			--shiki-token-string: var(--color-sky-200);
			--shiki-token-comment: var(--color-base-400);
			--shiki-token-keyword: var(--color-teal-300);
			--shiki-token-parameter: var(--color-base-300);
			--shiki-token-function: var(--color-violet-300);
			--shiki-token-string-expression: var(--color-sky-300);
			--shiki-token-punctuation: var(--color-base-300);
			--shiki-token-link: var(--color-base-300);

			margin-inline: -1.5rem;
			border-radius: 0;
			padding-inline: 0;

			@media (min-width: 640px) {
				margin-inline: 0;
				border-radius: var(--radius-xs);
			}

			& > code {
				/* wrapping codeblock */
				display: flex;
				flex-direction: column;
				width: fit-content;
				min-width: 100%;
			}

			& .line,
			& p {
				padding-inline: calc(var(--spacing) * 6);
				height: 2.5ch;

				&.highlighted {
					background-color: var(--color-base-800);
				}
			}
		}
	}

	body {
		font-family: Avenir, Montserrat, Corbel, "URW Gothic", source-sans-pro,
			sans-serif;
	}

	* {
		scroll-padding-block-start: calc(var(--spacing) * 20);
		@media (min-width: 1024px) {
			scroll-padding-block-start: calc(var(--spacing) * 4);
		}
	}

	pre,
	blockquote,
	.copy-text {
		cursor: copy;
		&:active {
			cursor: default;
		}
	}

	pre {
		font-size: var(--text-sm);
	}

	/* for safari */
	summary::-webkit-details-marker {
		display: none;
	}

	img {
		border: var(--border);
		width: auto;
		height: auto;
	}

	/* For youtube embeds */
	iframe {
		border: 2px solid var(--color-muted-foreground);
		border-radius: var(--radius-sm);
		background-color: var(--color-muted-foreground);
		aspect-ratio: 16 / 9;
		width: 100%;
	}
}

@layer components {
	on-this-page {
		/* gets rid of layout shift */
		display: block;
		margin-block-end: calc(var(--spacing) * 12);
		min-height: 86px;
	}

	@media (prefers-reduced-motion: no-preference) {
		/* modified from https://codepen.io/jh3y/pen/vzqVWa */
		#npm {
			& npm-word {
				display: inline-block;
			}
			& npm-char {
				--stagger: 0.08s;
				display: inline-block;
				animation-duration: 1.5s;
				animation-delay: calc(var(--char-index) * var(--stagger));
				animation-fill-mode: forwards;
				transition: transform 0.25s calc(var(--char-index) * var(--stagger));
			}
			& npm-char:nth-of-type(odd) {
				transform: translateX(100%);
			}
			& npm-char:nth-of-type(even) {
				transform: translateX(-100%);
			}
			& npm-char:nth-of-type(odd) {
				animation-name: swap-left;
			}
			& npm-char:nth-of-type(even) {
				animation-name: swap-right;
			}
		}

		@keyframes swap-right {
			25% {
				transform: translateX(-100%) translateY(-40%);
			}
			75% {
				transform: translateX(0) translateY(-40%);
				transform: rotate(30deg);
			}
			100% {
				transform: translateX(0) translateY(0);
			}
		}
		@keyframes swap-left {
			25% {
				transform: translateX(100%) translateY(40%);
				transform: rotate(-15deg);
			}
			75% {
				transform: translateX(0) translateY(40%);
			}
			100% {
				transform: translateX(0) translateY(0);
			}
		}
	}
}

@utility level-2 {
	/* on this page heading links */
	padding-block-start: var(--spacing);
}

@utility prose {
	blockquote {
		padding-inline-start: 0;
		font-style: normal;
		p {
			padding-inline-start: 0;
		}
	}
}
